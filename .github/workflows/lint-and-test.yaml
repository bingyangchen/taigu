name: Lint and test

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize]

jobs:
  detect-changes:
    name: Detect file changes
    runs-on: ubuntu-24.04-arm
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Check for backend changes
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            backend:
              - 'api-server/**'
              - 'scheduler/**'
            frontend:
              - 'frontend/**'

  codespell:
    name: Check code spelling
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"
      - name: Install codespell
        run: pip install codespell==2.4.1
      - name: Run codespell
        run: codespell --config=.codespellrc

  lint-backend:
    name: Lint Python with Ruff
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.backend == 'true' }}
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"
      - name: Install Ruff
        run: pip install ruff==0.12.8
      - name: Run Ruff
        run: ruff check ./api-server/ ./scheduler/ --config=./api-server/ruff.toml --no-cache

  backend-unit-tests:
    name: Backend unit tests
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.backend == 'true' }}
    runs-on: ubuntu-24.04-arm
    env:
      ENV: dev
      DB_HOST: dev
      DB_USER: dev
      DB_NAME: dev
      DB_PASSWORD: dev
      DB_PORT: 0
      REDIS_HOST: dev
      REDIS_PORT: 0
      SECRET_KEY: dev
      GOOGLE_CLIENT_ID: dev
      GOOGLE_PROJECT_ID: dev
      GOOGLE_CLIENT_SECRET: dev
      LOG_LEVEL: DEBUG
      SQL_LOG: 0
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build Docker image for testing
        run: |
          cd api-server
          docker build --target dev_final -t taigu-api-test .
      - name: Run pytest
        run: |
          docker run --rm \
            -v ${{ github.workspace }}/api-server:/app:ro \
            -e ENV="${ENV}" \
            -e DB_HOST="${DB_HOST}" \
            -e DB_USER="${DB_USER}" \
            -e DB_NAME="${DB_NAME}" \
            -e DB_PASSWORD="${DB_PASSWORD}" \
            -e DB_PORT="${DB_PORT}" \
            -e REDIS_HOST="${REDIS_HOST}" \
            -e REDIS_PORT="${REDIS_PORT}" \
            -e SECRET_KEY="${SECRET_KEY}" \
            -e GOOGLE_CLIENT_ID="${GOOGLE_CLIENT_ID}" \
            -e GOOGLE_PROJECT_ID="${GOOGLE_PROJECT_ID}" \
            -e GOOGLE_CLIENT_SECRET="${GOOGLE_CLIENT_SECRET}" \
            -e LOG_LEVEL="${LOG_LEVEL}" \
            -e SQL_LOG="${SQL_LOG}" \
            taigu-api-test pytest
