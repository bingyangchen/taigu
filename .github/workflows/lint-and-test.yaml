name: Lint and test

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize]

permissions:
  contents: read
  pull-requests: read

jobs:
  detect-changes:
    name: Detect file changes
    runs-on: ubuntu-24.04-arm
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Check for backend changes
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            backend:
              - 'api-server/**'
              - 'scheduler/**'
            frontend:
              - 'frontend/**'

  codespell:
    name: Check code spelling
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"
      - name: Install codespell
        run: pip install codespell==2.4.1
      - name: Run codespell
        run: codespell --config=.codespellrc

  lint-backend:
    name: Lint Python with Ruff
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.backend == 'true' }}
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"
      - name: Install Ruff
        run: pip install ruff==0.12.8
      - name: Run Ruff
        run: ruff check ./api-server/ ./scheduler/ --config=./api-server/ruff.toml --no-cache

  backend-unit-tests:
    name: Backend unit tests
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.backend == 'true' }}
    runs-on: ubuntu-24.04-arm
    environment: Test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build Docker image for testing
        run: |
          cd api-server
          docker build --target dev_final -t taigutw/api-server:dev .
      - name: Run pytest
        run: |
          docker compose -f compose.dev.yaml --progress quiet run --rm api-server pytest --ignore-glob="**/tests/integration/*"
        env:
          ENV: ${{ vars.ENV }}
          DB_HOST: ${{ vars.DB_HOST }}
          DB_USER: ${{ vars.DB_USER }}
          DB_NAME: ${{ vars.DB_NAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_PORT: ${{ vars.DB_PORT }}
          REDIS_HOST: ${{ vars.REDIS_HOST }}
          REDIS_PORT: ${{ vars.REDIS_PORT }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          GOOGLE_CLIENT_ID: ${{ vars.GOOGLE_CLIENT_ID }}
          GOOGLE_PROJECT_ID: ${{ vars.GOOGLE_PROJECT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          LOG_LEVEL: ${{ vars.LOG_LEVEL }}
          SQL_LOG: ${{ vars.SQL_LOG }}
