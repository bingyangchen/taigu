name: Lint and test

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize]

permissions:
  contents: read
  pull-requests: read

jobs:
  detect-changes:
    name: Detect file changes
    runs-on: ubuntu-24.04-arm
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Check for backend changes
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            backend:
              - 'api-server/**'
              - 'scheduler/**'
            frontend:
              - 'frontend/**'

  codespell:
    name: Check code spelling
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"
      - name: Install codespell
        run: pip install codespell==2.4.1
      - name: Run codespell
        run: codespell --config=.codespellrc

  lint-backend:
    name: Lint Python with Ruff
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.backend == 'true' }}
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"
      - name: Install Ruff
        run: pip install ruff==0.12.8
      - name: Run Ruff
        run: ruff check ./api-server/ ./scheduler/ --config=./api-server/ruff.toml --no-cache

  lint-frontend:
    name: Lint frontend with ESLint
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.frontend == 'true' }}
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.14.0"
      - name: Install only dev dependencies
        run: |
          cd frontend
          npm install --only=dev
      - name: Run Prettier
        run: |
          cd frontend
          npm run format:check
      - name: Run ESLint
        run: |
          cd frontend
          npm run lint

  backend-unit-tests:
    name: Backend unit tests
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.backend == 'true' }}
    runs-on: ubuntu-24.04-arm
    environment: Test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build Docker image for testing
        run: |
          cd api-server
          docker build --target dev_final -t taigutw/api-server:dev .
      - name: Run pytest
        run: |
          docker compose -f compose.dev.yaml --progress quiet run --rm \
            -e ENV="${{ vars.ENV }}" \
            -e DB_HOST="${{ vars.DB_HOST }}" \
            -e DB_USER="${{ vars.DB_USER }}" \
            -e DB_NAME="${{ vars.DB_NAME }}" \
            -e DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
            -e DB_PORT="${{ vars.DB_PORT }}" \
            -e REDIS_HOST="${{ vars.REDIS_HOST }}" \
            -e REDIS_PORT="${{ vars.REDIS_PORT }}" \
            -e SECRET_KEY="${{ secrets.SECRET_KEY }}" \
            -e GOOGLE_CLIENT_ID="${{ vars.GOOGLE_CLIENT_ID }}" \
            -e GOOGLE_PROJECT_ID="${{ vars.GOOGLE_PROJECT_ID }}" \
            -e GOOGLE_CLIENT_SECRET="${{ secrets.GOOGLE_CLIENT_SECRET }}" \
            -e LOG_LEVEL="${{ vars.LOG_LEVEL }}" \
            -e SQL_LOG="${{ vars.SQL_LOG }}" \
            api-server pytest --ignore-glob="**/tests/integration/*"
