services:
  api-server:
    image: tradesmartly/api-server:prod
    command: ["gunicorn"]
    env_file: .env
    expose:
      - "8000"
    depends_on:
      - redis
      - db
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "2m"
        max-file: "1"
  frontend:
    image: tradesmartly/frontend:prod
    command: ["serve", "-s", "build", "-l", "3000"]
    expose:
      - "3000"
    depends_on:
      - api-server
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "2m"
        max-file: "1"
  reverse-proxy:
    image: nginx:1.27.4
    user: root
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./reverse-proxy/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    command: ["nginx", "-g", "daemon off;"]
    depends_on:
      - api-server
      - frontend
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "2m"
        max-file: "1"
  redis:
    image: redis:7.4.4-alpine
    expose:
      - "6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "2m"
        max-file: "1"
  db:
    image: postgres:16.8
    expose:
      - "5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh # This will be executed when the container starts
    environment:
      - PGUSER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres # for default, the application doesn't use this
      - APP_DB=trade_smartly
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "2m"
        max-file: "1"
  scheduler:
    image: tradesmartly/scheduler:prod
    volumes:
      - ./api-server/scheduler.py:/app/scheduler.py:ro
    command: ["python", "-u", "scheduler.py"]
    env_file: .env
    depends_on:
      - redis
      - db
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "2m"
        max-file: "1"

volumes:
  redis_data:
  db_data:
